import { ApiProperty, ApiPropertyOptional, PickType } from '@nestjs/swagger';
import { ROLE_TALENT } from '@prisma/client';
import { IsEnum, IsInt, IsNotEmpty, IsOptional } from 'class-validator';
import { PageRequestDto } from 'src/utils/dto/page.dto';

export class TournamentBroadcastTalentDTO {
  @IsInt()
  @IsOptional()
  @ApiProperty({ example: 1, description: 'ID (autogenerated)' })
  id?: number;

  @IsInt()
  @IsNotEmpty()
  @ApiProperty({ example: 10, description: 'Tournament ID' })
  tournament_id: number;

  @IsInt()
  @IsNotEmpty()
  @ApiProperty({ example: 5, description: 'Talent ID (broadcast talent)' })
  talent_id: number;

  @IsEnum(['HOST', 'CASTER', 'ANALYST'])
  @IsNotEmpty()
  @ApiProperty({
    example: 'HOST',
    description: 'Role of the talent in the tournament',
  })
  role: ROLE_TALENT;
}

export class CreateTournamentBroadcastTalentDto extends PickType(
  TournamentBroadcastTalentDTO,
  ['tournament_id', 'talent_id', 'role'],
) {}

export class UpdateTournamentBroadcastTalentDto extends PickType(
  TournamentBroadcastTalentDTO,
  ['role'],
) {}

export class FindAllTournamentBroadcastTalentsDto extends PageRequestDto {
  @IsInt()
  @IsOptional()
  @ApiPropertyOptional({ example: 10, description: 'Tournament ID filter' })
  tournament_id?: number;

  @IsInt()
  @IsOptional()
  @ApiPropertyOptional({ example: 5, description: 'Talent ID filter' })
  talent_id?: number;
}
