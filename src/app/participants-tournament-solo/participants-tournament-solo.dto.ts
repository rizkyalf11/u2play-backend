import { ApiProperty, ApiPropertyOptional, PickType } from '@nestjs/swagger';
import { IsInt, IsNotEmpty, IsOptional, IsString } from 'class-validator';
import { PageRequestDto } from 'src/utils/dto/page.dto';

export class ParticipantSoloDTO {
  @IsInt()
  @IsOptional()
  @ApiProperty({ example: 1, description: 'Participant ID (autogenerated)' })
  id?: number;

  @IsInt()
  @IsOptional()
  @ApiPropertyOptional({ example: 12345, description: 'Challonge ID' })
  id_challonge?: number;

  @IsInt()
  @IsNotEmpty()
  @ApiProperty({ example: 1, description: 'User ID' })
  user_id: number;

  @IsInt()
  @IsNotEmpty()
  @ApiProperty({ example: 10, description: 'Tournament ID' })
  tournament_id: number;

  @IsString()
  @IsNotEmpty()
  @ApiProperty({ example: 'Player123', description: 'In-game name' })
  in_game_name: string;

  @IsInt()
  @IsNotEmpty()
  @ApiProperty({ example: 1, description: 'Seed' })
  seed: number;

  @IsString()
  @IsNotEmpty()
  @ApiProperty({ example: 'IGN123', description: 'In-game ID' })
  in_game_id: string;

  @IsInt()
  @IsOptional()
  @ApiPropertyOptional({ example: 2, description: 'Group ID' })
  group_id?: number;
}

export class CreateParticipantSoloDto extends PickType(ParticipantSoloDTO, [
  'id_challonge',
  //   'user_id',
  'tournament_id',
  'in_game_name',
  'seed',
  'in_game_id',
  'group_id',
]) {}

export class UpdateParticipantSoloDto extends PickType(ParticipantSoloDTO, [
  'id_challonge',
  'in_game_name',
  'seed',
  'in_game_id',
  'group_id',
]) {}

export class FindAllParticipantSoloDto extends PageRequestDto {
  @IsString()
  @IsOptional()
  @ApiPropertyOptional({
    example: 'Player123',
    description: 'Search by in-game name',
  })
  in_game_name?: string;

  @IsInt()
  @IsOptional()
  @ApiPropertyOptional({ example: 10, description: 'Tournament ID filter' })
  tournament_id?: number;
}
